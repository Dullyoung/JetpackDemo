plugins {
    id 'com.android.library'
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {

    api fileTree(dir: "libs", include: ["*.jar", "*.aar"])


    api rootProject.ext.commonDeps.arouter_api
    annotationProcessor rootProject.ext.annotationDeps.arouter_compiler

    api rootProject.ext.androidxDeps.appcompat
    api rootProject.ext.androidxDeps.constraintlayout
    api rootProject.ext.androidxDeps.material

    //RxJava关联生命周期
    api rootProject.ext.rxjava.life
    api rootProject.ext.rxjava.lifea
    api rootProject.ext.rxjava.lifec
    api rootProject.ext.rxjava.rxandroid
    api rootProject.ext.rxjava.rxbinding
    api rootProject.ext.rxjava.rxjava
    // 安卓Utils
    api rootProject.ext.utils.blankj

    api rootProject.ext.http.gson

    // okhttp3
    api rootProject.ext.http.okhttp

    api rootProject.ext.http["okhttp-interceptor"]
    api rootProject.ext.ui.rv_adapter
}